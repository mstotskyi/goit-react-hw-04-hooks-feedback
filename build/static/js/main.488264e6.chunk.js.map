{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Statistics/Statistics.module.css","components/NotificationMsg/NotificationMsg.module.css","components/Statistics/Statistics.js","components/NotificationMsg/NotificationMsg.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","statistics","NotificationMsg","message","FeedbackOptions","options","onLeaveFeedback","feedbackbtn","map","option","btn","name","onClick","toUpperCase","slice","Section","title","children","section","propZTypes","PropTypes","string","any","App","state","e","currentTarget","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","totalFeedback","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,IAAM,+B,iBCAxBD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,WAAa,iC,gBCA/BD,EAAOC,QAAU,CAAC,QAAU,mC,kMCEb,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,sBAAKC,UAAWC,IAAOC,WAAvB,UACE,uCAAUP,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,U,qBCbS,SAASI,EAAT,GAAuC,IAAZC,EAAW,EAAXA,QACxC,OAAO,mBAAGJ,UAAWC,IAAOG,QAArB,SAA+BA,I,oBCDzB,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,qBAAKP,UAAWC,IAAOO,YAAvB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBACEV,UAAWC,IAAOU,IAElBC,KAAMF,EACNG,QAASN,EAJX,SAMGG,EAAO,GAAGI,cAAgBJ,EAAOK,MAAM,IAJnCL,Q,oCCPA,SAASM,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASlB,UAAWC,IAAOkB,QAA3B,UACE,oBAAInB,UAAWC,IAAOgB,MAAtB,SAA8BA,IAC7BC,KAKPF,EAAQI,WAAa,CACnBH,MAAOI,IAAUC,OACjBJ,SAAUG,IAAUE,K,ICNhBC,E,4MACJC,MAAQ,CACN9B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,gBAAkB,SAAAmB,GAChB,IAAMhB,EAASgB,EAAEC,cAAcf,KAC/B,EAAKgB,UAAS,SAAAC,GAAS,sBACpBnB,EAASmB,EAAUnB,GAAU,O,EAIlCoB,mBAAqB,WACnB,MAA+B,EAAKL,MAEpC,OAFA,EAAQ9B,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBkC,gCAAkC,WAChC,IAAMC,EAAgB,EAAKF,qBAC3B,GAAsB,IAAlBE,EAAJ,CAGA,IAAQrC,EAAS,EAAK8B,MAAd9B,KAER,OADesC,KAAKC,MAAc,IAAPvC,EAAcqC,K,4CAI3C,WACE,IAAMlC,EAAQqC,KAAKL,qBACb/B,EAAqBoC,KAAKJ,kCAChC,EAA+BI,KAAKV,MAA5B9B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBS,EAAU8B,OAAOC,KAAKF,KAAKV,OAEjC,OACE,eAACT,EAAD,CAASC,MAAM,wBAAf,UACE,cAACZ,EAAD,CACEC,QAASA,EACTC,gBAAiB4B,KAAK5B,kBAEb,IAAVT,EACC,cAACJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAACI,EAAD,CAAiBC,QAAQ,6B,GAnDjBkC,aA0DHd,ICnDfe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.488264e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1WbWB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3p25q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1vu4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NotificationMsg_message__2tbW9\"};","import PropTypes from 'prop-types';\r\nimport styles from 'components/Statistics/Statistics.module.css';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <div className={styles.statistics}>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {positivePercentage}%</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positive: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport styles from 'components/NotificationMsg/NotificationMsg.module.css';\r\n\r\nexport default function NotificationMsg({ message }) {\r\n  return <p className={styles.message}>{message}</p>;\r\n}\r\n\r\nNotificationMsg.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport styles from 'components/FeedbackOptions/FeedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div className={styles.feedbackbtn}>\r\n      {options.map(option => (\r\n        <button\r\n          className={styles.btn}\r\n          key={option}\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option[0].toUpperCase() + option.slice(1)}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport styles from 'components/Section/Section.module.css';\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h1 className={styles.title}>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propZTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.any,\r\n};\r\n","import './App.css';\nimport { Component } from 'react';\nimport Statistics from 'components/Statistics/Statistics';\nimport NotificationMsg from 'components/NotificationMsg/NotificationMsg';\nimport FeedbackOptions from 'components/FeedbackOptions/FeedbackOptions';\nimport Section from 'components/Section/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = e => {\n    const option = e.currentTarget.name;\n    this.setState(prevState => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const result = good + neutral + bad;\n    return result;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const totalFeedback = this.countTotalFeedback();\n    if (totalFeedback === 0) {\n      return;\n    }\n    const { good } = this.state;\n    const result = Math.round((good * 100) / totalFeedback);\n    return result;\n  };\n\n  render() {\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    const { good, neutral, bad } = this.state;\n    const options = Object.keys(this.state);\n\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={options}\n          onLeaveFeedback={this.onLeaveFeedback}\n        />\n        {total !== 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        ) : (\n          <NotificationMsg message=\"No feedback given\" />\n        )}\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\n\n\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}