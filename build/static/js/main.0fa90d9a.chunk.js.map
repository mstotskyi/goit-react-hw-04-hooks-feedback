{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Statistics/Statistics.module.css","components/NotificationMsg/NotificationMsg.module.css","components/Statistics/Statistics.js","components/NotificationMsg/NotificationMsg.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","statistics","NotificationMsg","message","FeedbackOptions","options","onLeaveFeedback","feedbackbtn","map","option","btn","name","onClick","toUpperCase","slice","Section","title","children","section","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","currentTarget","totalFeedback","Math","round","propZTypes","PropTypes","string","any","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,IAAM,+B,iBCAxBD,EAAOC,QAAU,CAAC,QAAU,2B,iBCA5BD,EAAOC,QAAU,CAAC,WAAa,iC,gBCA/BD,EAAOC,QAAU,CAAC,QAAU,mC,iKCEb,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,sBAAKC,UAAWC,IAAOC,WAAvB,UACE,uCAAUP,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,IAAvB,U,oBCbS,SAASI,EAAT,GAAuC,IAAZC,EAAW,EAAXA,QACxC,OAAO,mBAAGJ,UAAWC,IAAOG,QAArB,SAA+BA,I,oBCDzB,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,qBAAKP,UAAWC,IAAOO,YAAvB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBACEV,UAAWC,IAAOU,IAElBC,KAAMF,EACNG,QAASN,EAJX,SAMGG,EAAO,GAAGI,cAAgBJ,EAAOK,MAAM,IAJnCL,Q,oCCPA,SAASM,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASlB,UAAWC,IAAOkB,QAA3B,UACE,oBAAInB,UAAWC,IAAOgB,MAAtB,SAA8BA,IAC7BC,KCCQ,SAASE,IACtB,MAAwBC,mBAAS,GAAjC,mBAAO1B,EAAP,KAAa2B,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOzB,EAAP,KAAgB2B,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOxB,EAAP,KAAY2B,EAAZ,KAkBMC,EAAqB,WAEzB,OADe9B,EAAOC,EAAUC,GAc5BC,EAAQ2B,IAEd,OACE,eAACT,EAAD,CAASC,MAAM,wBAAf,UACE,cAACZ,EAAD,CAAiBC,QALL,CAAC,OAAQ,UAAW,OAKGC,gBAnCf,SAAAmB,GACtB,OAAQA,EAAEC,cAAcf,MACtB,IAAK,OACHU,EAAQ3B,EAAO,GACf,MACF,IAAK,UACH4B,EAAW3B,EAAU,GACrB,MACF,IAAK,MACH4B,EAAO3B,EAAM,GACb,MACF,QACE,WAwBS,IAAVC,EACC,cAACJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBArBgC,WACtC,IAAM6B,EAAgBH,IACtB,GAAsB,IAAlBG,EAIJ,OADeC,KAAKC,MAAc,IAAPnC,EAAciC,MAmBrC,cAACzB,EAAD,CAAiBC,QAAQ,yBD9CjCY,EAAQe,WAAa,CACnBd,MAAOe,IAAUC,OACjBf,SAAUc,IAAUE,KECtBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0fa90d9a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1E3tI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2ssID\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__11Uuq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NotificationMsg_message__1LCNx\"};","import PropTypes from 'prop-types';\r\nimport styles from 'components/Statistics/Statistics.module.css';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <div className={styles.statistics}>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {positivePercentage()}%</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positive: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport styles from 'components/NotificationMsg/NotificationMsg.module.css';\r\n\r\nexport default function NotificationMsg({ message }) {\r\n  return <p className={styles.message}>{message}</p>;\r\n}\r\n\r\nNotificationMsg.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport styles from 'components/FeedbackOptions/FeedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div className={styles.feedbackbtn}>\r\n      {options.map(option => (\r\n        <button\r\n          className={styles.btn}\r\n          key={option}\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option[0].toUpperCase() + option.slice(1)}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport styles from 'components/Section/Section.module.css';\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h1 className={styles.title}>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propZTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.any,\r\n};\r\n","import './App.css';\r\nimport { useState } from 'react';\r\nimport Statistics from 'components/Statistics/Statistics';\r\nimport NotificationMsg from 'components/NotificationMsg/NotificationMsg';\r\nimport FeedbackOptions from 'components/FeedbackOptions/FeedbackOptions';\r\nimport Section from 'components/Section/Section';\r\n\r\nexport default function App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const onLeaveFeedback = e => {\r\n    switch (e.currentTarget.name) {\r\n      case 'good':\r\n        setGood(good + 1);\r\n        break;\r\n      case 'neutral':\r\n        setNeutral(neutral + 1);\r\n        break;\r\n      case 'bad':\r\n        setBad(bad + 1);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const countTotalFeedback = () => {\r\n    const result = good + neutral + bad;\r\n    return result;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    const totalFeedback = countTotalFeedback();\r\n    if (totalFeedback === 0) {\r\n      return;\r\n    }\r\n    const result = Math.round((good * 100) / totalFeedback);\r\n    return result;\r\n  };\r\n\r\n  const options = ['good', 'neutral', 'bad'];\r\n  const total = countTotalFeedback();\r\n\r\n  return (\r\n    <Section title=\"Please leave feedback\">\r\n      <FeedbackOptions options={options} onLeaveFeedback={onLeaveFeedback} />\r\n      {total !== 0 ? (\r\n        <Statistics\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          total={total}\r\n          positivePercentage={countPositiveFeedbackPercentage}\r\n        />\r\n      ) : (\r\n        <NotificationMsg message=\"No feedback given\" />\r\n      )}\r\n    </Section>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}